---
// awards.astro - 荣誉墙页面
import BaseLayout from '../components/layout/BaseLayout.astro';
import Badge from '../components/common/Badge.astro';
import AwardCard from '../components/awards/AwardCard.astro';
import awardsData from '../data/awards.json';

const { statistics, awards } = awardsData;

// 按级别分组
const nationalAwards = awards.filter((a) => a.level === 'national');
const provincialAwards = awards.filter((a) => a.level === 'provincial');
const schoolAwards = awards.filter((a) => a.level === 'school');
---

<BaseLayout title="荣誉墙 - 王一然的获奖记录" description="王一然获得的各类奖项和荣誉，包括全国作文一等奖、AI竞赛铜奖、体育比赛第二名等15个奖项。">
    <!-- 页头 -->
    <section class="awards-hero">
        <div class="container">
            <div class="awards-hero__content scroll-reveal">
                <Badge variant="gold">荣誉殿堂</Badge>
                <h1 class="awards-hero__title gradient-text">荣誉墙</h1>
                <p class="awards-hero__description">
                    每一个奖项都是努力的见证，每一次进步都值得铭记。
                    <br />
                    这些荣誉激励我不断前行，追求卓越。
                </p>
            </div>

            <!-- 统计面板 -->
            <div class="stats-panel">
                <div class="stat-card scroll-reveal" data-delay="1">
                    <div class="stat-icon">🏆</div>
                    <div class="stat-number">{statistics.total}</div>
                    <div class="stat-label">总奖项数</div>
                </div>
                <div class="stat-card scroll-reveal" data-delay="2">
                    <div class="stat-icon">👑</div>
                    <div class="stat-number">{statistics.national}</div>
                    <div class="stat-label">国家级</div>
                </div>
                <div class="stat-card scroll-reveal" data-delay="3">
                    <div class="stat-icon">🥈</div>
                    <div class="stat-number">{statistics.provincial}</div>
                    <div class="stat-label">省部级</div>
                </div>
                <div class="stat-card scroll-reveal" data-delay="4">
                    <div class="stat-icon">⭐</div>
                    <div class="stat-number">{statistics.school}</div>
                    <div class="stat-label">校级</div>
                </div>
            </div>
        </div>
    </section>

    <!-- 国家级奖项 -->
    <section class="awards-section section">
        <div class="container">
            <div class="section-header scroll-reveal">
                <Badge variant="gold">国家级荣誉</Badge>
                <h2 class="section-title">国家级奖项</h2>
                <p class="section-description">在全国性赛事中脱颖而出，展现卓越才能</p>
            </div>

            <div class="awards-grid">
                {nationalAwards.map((award, index) => <AwardCard {...award} data-delay={index + 1} />)}
            </div>
        </div>
    </section>

    <!-- 省部级奖项 -->
    <section class="awards-section section">
        <div class="container">
            <div class="section-header scroll-reveal">
                <Badge variant="secondary">省部级荣誉</Badge>
                <h2 class="section-title">省部级奖项</h2>
                <p class="section-description">在北京市范围内表现突出，获得认可</p>
            </div>

            <div class="awards-grid">
                {provincialAwards.map((award, index) => <AwardCard {...award} data-delay={index + 1} />)}
            </div>
        </div>
    </section>

    <!-- 校级奖项 -->
    <section class="awards-section section">
        <div class="container">
            <div class="section-header scroll-reveal">
                <Badge variant="primary">校级荣誉</Badge>
                <h2 class="section-title">校级奖项</h2>
                <p class="section-description">在学校中展现优秀品质和能力</p>
            </div>

            <div class="awards-grid">
                {schoolAwards.map((award, index) => <AwardCard {...award} data-delay={index + 1} />)}
            </div>
        </div>
    </section>

    <!-- 图片查看模态框 -->
    <div id="image-modal" class="modal">
        <div class="modal-backdrop"></div>
        <div class="modal-content">
            <button class="modal-close" aria-label="关闭">
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                >
                    <line x1="18" y1="6" x2="6" y2="18"></line>
                    <line x1="6" y1="6" x2="18" y2="18"></line>
                </svg>
            </button>
            <img id="modal-image" src="" alt="" />
        </div>
    </div>
</BaseLayout>

<style>
    .awards-hero {
        padding: 8rem 0 4rem;
        text-align: center;
    }

    .awards-hero__content {
        margin-bottom: 4rem;
    }

    .awards-hero__title {
        font-size: clamp(2.5rem, 5vw, 4rem);
        margin: 1rem 0;
    }

    .awards-hero__description {
        max-width: 700px;
        margin: 0 auto;
        font-size: 1.125rem;
        color: var(--color-text-secondary);
        line-height: 1.8;
    }

    .stats-panel {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 2rem;
        max-width: 900px;
        margin: 0 auto;
    }

    .stat-card {
        background: rgba(26, 31, 53, 0.6);
        backdrop-filter: blur(10px);
        border: 1px solid var(--color-border);
        border-radius: 1rem;
        padding: 2rem;
        text-align: center;
        transition: all var(--duration-normal) var(--ease-out);
    }

    .stat-card:hover {
        background: rgba(26, 31, 53, 0.8);
        border-color: var(--color-primary-600);
        transform: translateY(-8px);
        box-shadow: var(--shadow-glow);
    }

    .stat-icon {
        font-size: 3rem;
        margin-bottom: 1rem;
    }

    .stat-number {
        font-size: 3rem;
        font-weight: 800;
        background: linear-gradient(135deg, var(--color-accent-cyan), var(--color-primary-400));
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
        margin-bottom: 0.5rem;
    }

    .stat-label {
        color: var(--color-text-secondary);
        font-size: 1rem;
    }

    .awards-section {
        position: relative;
    }

    .section-header {
        text-align: center;
        margin-bottom: 4rem;
    }

    .section-title {
        font-size: clamp(2rem, 4vw, 3rem);
        margin: 1rem 0;
    }

    .section-description {
        max-width: 600px;
        margin: 0 auto;
        color: var(--color-text-secondary);
        font-size: 1.125rem;
    }

    .awards-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
        gap: 2rem;
    }

    /* 模态框 */
    .modal {
        position: fixed;
        inset: 0;
        z-index: var(--z-modal);
        display: none;
        align-items: center;
        justify-content: center;
        padding: 2rem;
    }

    .modal.active {
        display: flex;
    }

    .modal-backdrop {
        position: absolute;
        inset: 0;
        background: rgba(10, 14, 26, 0.95);
        backdrop-filter: blur(10px);
    }

    .modal-content {
        position: relative;
        max-width: 90vw;
        max-height: 90vh;
        z-index: 1;
        animation: scaleIn 0.3s ease;
    }

    .modal-close {
        position: absolute;
        top: -3rem;
        right: 0;
        width: 2.5rem;
        height: 2.5rem;
        background: rgba(26, 31, 53, 0.8);
        border: 1px solid var(--color-border);
        border-radius: 50%;
        color: var(--color-text-primary);
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all var(--duration-normal) var(--ease-out);
    }

    .modal-close:hover {
        background: var(--color-primary-600);
        transform: rotate(90deg);
    }

    #modal-image {
        max-width: 100%;
        max-height: 90vh;
        border-radius: 1rem;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);
    }

    @media (max-width: 767px) {
        .awards-hero {
            padding: 6rem 0 3rem;
        }

        .awards-grid {
            grid-template-columns: 1fr;
        }

        .stats-panel {
            grid-template-columns: repeat(2, 1fr);
            gap: 1rem;
        }

        .stat-card {
            padding: 1.5rem 1rem;
        }

        .stat-icon {
            font-size: 2rem;
        }

        .stat-number {
            font-size: 2rem;
        }
    }
</style>

<script>
    // 图片查看功能
    const modal = document.getElementById('image-modal');
    const modalImage = document.getElementById('modal-image') as HTMLImageElement;
    const modalClose = document.querySelector('.modal-close');
    const modalBackdrop = document.querySelector('.modal-backdrop');
    const viewButtons = document.querySelectorAll('.view-btn');

    viewButtons.forEach((btn) => {
        btn.addEventListener('click', (e) => {
            const card = (e.currentTarget as HTMLElement).closest('.award-card');
            const imageContainer = card?.querySelector('.award-card__image-container');
            const imageSrc = imageContainer?.getAttribute('data-image');
            const imageAlt = card?.querySelector('.award-card__title')?.textContent || '';

            if (imageSrc) {
                modalImage.src = imageSrc;
                modalImage.alt = imageAlt;
                modal?.classList.add('active');
                document.body.style.overflow = 'hidden';
            }
        });
    });

    function closeModal() {
        modal?.classList.remove('active');
        document.body.style.overflow = '';
    }

    modalClose?.addEventListener('click', closeModal);
    modalBackdrop?.addEventListener('click', closeModal);

    // ESC键关闭
    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && modal?.classList.contains('active')) {
            closeModal();
        }
    });
</script>
