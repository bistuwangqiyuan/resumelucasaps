/* 动画样式 - 王一然个人网站 */

/* ================================
   1. 淡入动画
   ================================ */
@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

.fade-in {
    animation: fadeIn var(--duration-slow) var(--ease-out);
}

/* ================================
   2. 上浮动画
   ================================ */
@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.fade-in-up {
    animation: fadeInUp var(--duration-slow) var(--ease-out);
}

/* ================================
   3. 下沉动画
   ================================ */
@keyframes fadeInDown {
    from {
        opacity: 0;
        transform: translateY(-30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.fade-in-down {
    animation: fadeInDown var(--duration-slow) var(--ease-out);
}

/* ================================
   4. 左滑入动画
   ================================ */
@keyframes fadeInLeft {
    from {
        opacity: 0;
        transform: translateX(-30px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

.fade-in-left {
    animation: fadeInLeft var(--duration-slow) var(--ease-out);
}

/* ================================
   5. 右滑入动画
   ================================ */
@keyframes fadeInRight {
    from {
        opacity: 0;
        transform: translateX(30px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

.fade-in-right {
    animation: fadeInRight var(--duration-slow) var(--ease-out);
}

/* ================================
   6. 缩放动画
   ================================ */
@keyframes scaleIn {
    from {
        opacity: 0;
        transform: scale(0.9);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

.scale-in {
    animation: scaleIn var(--duration-slow) var(--ease-out);
}

/* ================================
   7. 打字机效果
   ================================ */
@keyframes typing {
    from {
        width: 0;
    }
    to {
        width: 100%;
    }
}

@keyframes blink {
    50% {
        border-color: transparent;
    }
}

.typewriter {
    overflow: hidden;
    border-right: 2px solid var(--color-accent-cyan);
    white-space: nowrap;
    animation: typing 3s steps(40) 1s both, blink 0.75s step-end infinite;
}

/* ================================
   8. 脉冲动画
   ================================ */
@keyframes pulse {
    0%,
    100% {
        opacity: 1;
    }
    50% {
        opacity: 0.5;
    }
}

.pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

/* ================================
   9. 弹跳动画
   ================================ */
@keyframes bounce {
    0%,
    100% {
        transform: translateY(0);
        animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
    }
    50% {
        transform: translateY(-25%);
        animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
    }
}

.bounce {
    animation: bounce 1s infinite;
}

/* ================================
   10. 旋转动画
   ================================ */
@keyframes spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

.spin {
    animation: spin 1s linear infinite;
}

/* ================================
   11. 摇晃动画
   ================================ */
@keyframes shake {
    0%,
    100% {
        transform: translateX(0);
    }
    10%,
    30%,
    50%,
    70%,
    90% {
        transform: translateX(-10px);
    }
    20%,
    40%,
    60%,
    80% {
        transform: translateX(10px);
    }
}

.shake {
    animation: shake 0.5s;
}

/* ================================
   12. 光晕脉冲
   ================================ */
@keyframes glowPulse {
    0%,
    100% {
        box-shadow: 0 0 20px rgba(25, 118, 210, 0.3);
    }
    50% {
        box-shadow: 0 0 40px rgba(25, 118, 210, 0.6);
    }
}

.glow-pulse {
    animation: glowPulse 2s ease-in-out infinite;
}

/* ================================
   13. 浮动动画
   ================================ */
@keyframes float {
    0%,
    100% {
        transform: translateY(0px);
    }
    50% {
        transform: translateY(-20px);
    }
}

.float {
    animation: float 3s ease-in-out infinite;
}

/* ================================
   14. 彩虹渐变动画
   ================================ */
@keyframes rainbowGradient {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}

.rainbow-gradient {
    background: linear-gradient(270deg, #00e5ff, #1976d2, #a855f7, #ffb800, #00e5ff);
    background-size: 400% 400%;
    animation: rainbowGradient 8s ease infinite;
}

/* ================================
   15. 滚动显示动画
   ================================ */
.scroll-reveal {
    opacity: 0;
    transform: translateY(50px);
    transition: opacity var(--duration-slow) var(--ease-out), transform var(--duration-slow) var(--ease-out);
}

.scroll-reveal.visible {
    opacity: 1;
    transform: translateY(0);
}

/* 延迟变体 */
.scroll-reveal[data-delay='1'] {
    transition-delay: 100ms;
}
.scroll-reveal[data-delay='2'] {
    transition-delay: 200ms;
}
.scroll-reveal[data-delay='3'] {
    transition-delay: 300ms;
}
.scroll-reveal[data-delay='4'] {
    transition-delay: 400ms;
}
.scroll-reveal[data-delay='5'] {
    transition-delay: 500ms;
}

/* ================================
   16. 卡片悬停效果
   ================================ */
.card-hover {
    transition: transform var(--duration-normal) var(--ease-out), box-shadow var(--duration-normal) var(--ease-out);
}

.card-hover:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: var(--shadow-glow);
}

/* 3D悬停效果 */
.card-3d {
    transform-style: preserve-3d;
    transition: transform var(--duration-normal) var(--ease-out);
}

.card-3d:hover {
    transform: rotateX(5deg) rotateY(5deg) scale(1.05);
}

/* ================================
   17. 按钮涟漪效果
   ================================ */
@keyframes ripple {
    to {
        transform: scale(4);
        opacity: 0;
    }
}

.ripple-effect {
    position: relative;
    overflow: hidden;
}

.ripple-effect::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.5);
    transform: translate(-50%, -50%) scale(0);
    pointer-events: none;
}

.ripple-effect:active::after {
    animation: ripple 0.6s ease-out;
}

/* ================================
   18. 加载动画
   ================================ */
@keyframes shimmer {
    0% {
        background-position: -1000px 0;
    }
    100% {
        background-position: 1000px 0;
    }
}

.skeleton {
    background: linear-gradient(90deg, var(--color-bg-secondary) 0%, var(--color-bg-tertiary) 50%, var(--color-bg-secondary) 100%);
    background-size: 1000px 100%;
    animation: shimmer 2s infinite;
}

/* ================================
   19. 数字滚动动画
   ================================ */
@keyframes countUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.count-up {
    animation: countUp var(--duration-slow) var(--ease-out);
}

/* ================================
   20. 进度条动画
   ================================ */
@keyframes progressFill {
    from {
        width: 0%;
    }
}

.progress-fill {
    animation: progressFill 1.5s var(--ease-out) forwards;
}

/* ================================
   21. 延迟工具类
   ================================ */
.delay-100 {
    animation-delay: 100ms;
}
.delay-200 {
    animation-delay: 200ms;
}
.delay-300 {
    animation-delay: 300ms;
}
.delay-400 {
    animation-delay: 400ms;
}
.delay-500 {
    animation-delay: 500ms;
}
.delay-600 {
    animation-delay: 600ms;
}
.delay-700 {
    animation-delay: 700ms;
}
.delay-800 {
    animation-delay: 800ms;
}

/* ================================
   22. 持续时间工具类
   ================================ */
.duration-fast {
    animation-duration: var(--duration-fast);
}
.duration-normal {
    animation-duration: var(--duration-normal);
}
.duration-slow {
    animation-duration: var(--duration-slow);
}
.duration-slower {
    animation-duration: var(--duration-slower);
}

/* ================================
   23. 减少动画（可访问性）
   ================================ */
@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
    }
}
